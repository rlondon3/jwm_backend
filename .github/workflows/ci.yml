name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        options: >
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB_TEST }}
        ports:
          - 5432:5432

      pgadmin:
        image: dpage/pgadmin4:latest
        ports:
          - 5050:80
        env:
          PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD: ${{ vars.PGADMIN_DEFAULT_PASSWORD }}

    env:
      POSTGRES_HOST: localhost
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_DB_TEST: ${{ vars.POSTGRES_DB_TEST }}
      POSTGRES_DB_PROD: POSTGRES_DB_PROD
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      PGADMIN_DEFAULT_EMAIL: ${{ vars.PGADMIN_DEFAULT_EMAIL }}
      PGADMIN_DEFAULT_PASSWORD: ${{ vars.PGADMIN_DEFAULT_PASSWORD }}
      DB_PORT: ${{ vars.DB_PORT }}
      TOKEN_SECRET: ${{ vars.TOKEN_SECRET }}
      SALT_ROUNDS: ${{ vars.SALT_ROUNDS }}
      PEPPER: ${{ vars.PEPPER }}
      ENV: ${{ vars.ENV }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.5.0

      - name: Show current directory
        run: |
          echo "Current directory is: $(pwd)"
          echo "Listing the contents:"
          ls -la

      - name: Install Backend dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h postgres -p 5432 -U $POSTGRES_USER; do
          echo "PostgreSQL is not ready yet"
          sleep 5
          done

      - name: Create Test Database
        run: |
          psql -U $POSTGRES_USER -h postgres -p 5432 -c "CREATE DATABASE $POSTGRES_DB_TEST;"

      - name: Verify Test Database
        run: |
          psql -U $POSTGRES_USER -h postgres -p 5432 -l

      - name: Verify Test Database and List Tables
        run: |
          psql -U $POSTGRES_USER -h postgres -p 5432 -d $POSTGRES_DB_TEST -c '\dt'
          psql -U $POSTGRES_USER -h postgres -p 5432 -d $POSTGRES_DB_TEST -c '\d'

      - name: Run Backend tests
        run: |
          pnpm test
