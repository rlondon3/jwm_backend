name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB_TEST }}
        options: >-
          --health-cmd="pg_isready -U ${{ vars.POSTGRES_USER }} -d ${{ vars.POSTGRES_DB_TEST }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      POSTGRES_HOST: postgres_container:5432
      POSTGRES_DB: ${{ vars.POSTGRES_DB }}
      POSTGRES_DB_TEST: ${{ vars.POSTGRES_DB_TEST }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
      DB_PORT: 5432
      TOKEN_SECRET: ${{ vars.TOKEN_SECRET }}
      SALT_ROUNDS: ${{ vars.SALT_ROUNDS }}
      PEPPER: ${{ vars.PEPPER }}
      ENV: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.5.0

      - name: Install dependencies
        run: pnpm install

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h postgres -p 5432 -U $POSTGRES_USER; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Run database migrations
        run: pnpm db-migrate up:test --env test --verbose

      - name: Run Backend tests
        run: pnpm test

      - name: Debug Test Database
        run: |
          docker exec -e PGPASSWORD=$POSTGRES_PASSWORD postgres sh -c "psql -U $POSTGRES_USER -h postgres -p 5432 -d $POSTGRES_DB_TEST -c '\dt'"
