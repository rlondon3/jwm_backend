name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        options: >
          --health-cmd="pg_isready -U POSTGRES_USER"
        env:
          POSTGRES_USER: POSTGRES_USER
          POSTGRES_PASSWORD: POSTGRES_PASSWORD
          POSTGRES_DB: POSTGRES_DB
        ports:
          - 5432:5432
      pgadmin:
        image: dpage/pgadmin4:latest
        ports:
          - 5050:80
        env:
          PGADMIN_DEFAULT_EMAIL: PGADMIN_DEFAULT_EMAIL
          PGADMIN_DEFAULT_PASSWORD: PGADMIN_DEFAULT_PASSWORD

    env:
      POSTGRES_HOST: localhost
      POSTGRES_DB: POSTGRES_DB
      POSTGRES_DB_TEST: POSTGRES_DB_TEST
      POSTGRES_DB_PROD: POSTGRES_DB_PROD
      POSTGRES_USER: POSTGRES_USER
      POSTGRES_PASSWORD: POSTGRES_PASSWORD
      PGADMIN_DEFAULT_EMAIL: PGADMIN_DEFAULT_EMAIL
      PGADMIN_DEFAULT_PASSWORD: PGADMIN_DEFAULT_PASSWORD
      DB_PORT: DB_PORT
      TOKEN_SECRET: TOKEN_SECRET
      SALT_ROUNDS: SALT_ROUNDS
      PEPPER: PEPPER

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.5.0

      - name: Show current directory
        run: |
          echo "Current directory is: $(pwd)"
          echo "Listing the contents:"
          ls -la

      - name: Install Backend dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Start PostgreSQL Container
        run: |
          docker run --name postgres_container -e POSTGRES_USER=$POSTGRES_USER -e POSTGRES_PASSWORD=$POSTGRES_PASSWORD -e POSTGRES_DB=$POSTGRES_DB -p 5433:5432 -d postgres:latest

      - name: Create Test Database
        run: |
          docker exec -it postgres_container psql -U $POSTGRES_USER -c "CREATE DATABASE $POSTGRES_DB_TEST;"

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U POSTGRES_USER; do
          echo "PostgreSQL is not ready yet"
          sleep 5
          done

      - name: Run Backend tests
        run: |
          pnpm test
